@model ProyectoFinal.Models.ViewModel.LoginViewModel


@{
    ViewBag.Title = "Login";
}


<div class="container d-flex justify-content-center">
    <div class="col-md-4">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-header bg-primary"><h4>Login</h4></div>
                <div class="card-body">
                    @{ if (!string.IsNullOrEmpty(Model.Error))
                        {<span class="text-danger">@Model.Error</span> } }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contrasena, htmlAttributes: new { @class = "form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { Type = "password", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Login" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
    </div>

